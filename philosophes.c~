/*
** philosophes.c for  in /home/trotie_m/rendu/PSU_2014_philo
** 
** Made by Trotier Marie
** Login   <trotie_m@epitech.net>
** 
** Started on  Sun Feb 22 15:30:22 2015 Trotier Marie
** Last update Mon Feb 23 16:27:40 2015 Trotier Marie
*/

#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>
#include <pthread.h>

pthread_mutex_t m_creation = PTHREAD_MUTEX_INITIALIZER;

void	*init_philo(void *arg)
{
      //      pthread_mutex_lock(&m_creation);
      // pthread_mutex_unlock(&m_creation);
  printf("%d philosophes\n", );
}

void	*create_philo(void *arg)
{
  int	i;
  pthread_t philo;
  

  i = 0;
  while (i < 7)
    {
      pthread_create(&philo, NULL, init_philo, NULL);
      i++;
    }
}

int	main()
{
  pthread_t     th_create;

  pthread_create(&th_create, NULL, create_philo, NULL);
  pthread_join(th_create, NULL);
  return (0);
}
